apply plugin: 'com.android.application'

android {

    signingConfigs {
        signingconfig {
            keyAlias "$hapisKeyAlias"
            keyPassword "$hapisKeyPassword"
            storeFile file("$hapisKeyStorePath")
            storePassword "$hapisKeyStorePwd"
        }
    }
    compileSdkVersion 27
    buildToolsVersion '28.0.2'
    defaultConfig {
        applicationId "$hapisApplicationId"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode "$hapisVersionCode".toInteger()
        versionName "$hapisVersionName"
        renderscriptTargetApi 20
        renderscriptSupportModeEnabled true
        multiDexEnabled = true
        vectorDrawables.useSupportLibrary = true
        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a", "x86_64", "x86"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                appendVersionName(variant, defaultConfig)
            }
            signingConfig signingConfigs.signingconfig
        }
        debug {
            debuggable true
            crunchPngs true
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ECLIPSE_.SF'
        exclude 'META-INF/ECLIPSE_.RSA'
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    lintOptions {
        checkReleaseBuilds false
    }
      compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    aaptOptions {
        cruncherEnabled = false
    }
}

def appendVersionName(variant, defaultConfig) {
    variant.outputs.all { output ->
        if (output.zipAlign) {
            outputFileName = "Hapis-" + defaultConfig.versionName + "v.apk"
        }

        outputFileName = "Hapis-" + defaultConfig.versionName + "v.apk"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation files('libs/commons-io-2.5.jar')
    implementation files('libs/joda-time-2.2.jar')
    implementation 'com.google.code.gson:gson:2.8.1'

    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:support-v13:27.1.1'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:palette-v7:27.1.1'
    implementation 'com.android.support:support-annotations:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'

    implementation 'com.github.ganfra:material-spinner:1.1.1'
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    implementation 'com.github.bumptech.glide:annotations:4.7.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
    implementation 'org.glassfish:javax.annotation:10.0-b28'
    implementation 'jp.wasabeef:glide-transformations:3.0.1'
    implementation 'pub.devrel:easypermissions:0.4.0'
    implementation 'gun0912.ted:tedpermission:1.0.2'
    testImplementation 'junit:junit:4.12'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.google.guava:guava:19.0'

    def lifecycle_version = "1.1.1"

    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    // alternatively - just ViewModel
//    implementation "android.arch.lifecycle:viewmodel:$lifecycle_version" // use -ktx for Kotlin
    // alternatively - just LiveData
//    implementation "android.arch.lifecycle:livedata:$lifecycle_version"
    // alternatively - Lifecycles only (no ViewModel or LiveData).
    //     Support library depends on this lightweight import
//    implementation "android.arch.lifecycle:runtime:$lifecycle_version"

    annotationProcessor "android.arch.lifecycle:compiler:$lifecycle_version" // use kapt for Kotlin
    def room_version = "1.1.1"

    implementation "android.arch.persistence.room:runtime:$room_version"
    annotationProcessor "android.arch.persistence.room:compiler:$room_version"

    debugImplementation 'com.amitshekhar.android:debug-db:1.0.4'
}


